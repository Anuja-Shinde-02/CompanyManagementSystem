/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.DonorRole;

import Business.Donor.Donor;
import Business.Donor.DonorDirectory;
import Business.EcoSystem;
import Business.UserAccount.UserAccount;
import java.awt.Dimension;
import java.awt.Image;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author dristidani
 */
public class DonorProfilePanel extends javax.swing.JPanel {

    /**
     * Creates new form DonorProfilePanle
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount userAcc;
    String DonUname;
    String DonName;
    DonorDirectory donDir;
    public DonorProfilePanel(JPanel userProcessContainer, EcoSystem ecosystem, UserAccount userAcc) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.userAcc = userAcc;
        btnSubmit.setVisible(false);
        btnCancel.setVisible(false);
        lblDonorConfirmPassword.setVisible(false);
        txtDonorConfirmPassword.setVisible(false);
        DonUname = userAcc.getUsername();
        DonName = userAcc.getEmployee().getName();
        populateFields();
        setBG();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDonProfileTitle = new javax.swing.JLabel();
        lblDonorName = new javax.swing.JLabel();
        txtDonorName = new javax.swing.JTextField();
        lblDonorContact = new javax.swing.JLabel();
        txtDonorContact = new javax.swing.JTextField();
        lblDonorAddress = new javax.swing.JLabel();
        txtDonorAddress = new javax.swing.JTextField();
        lblDonorCity = new javax.swing.JLabel();
        txtDonorCity = new javax.swing.JTextField();
        lblDonorstate = new javax.swing.JLabel();
        txtDonorState = new javax.swing.JTextField();
        lblDonorZip = new javax.swing.JLabel();
        txtDonorZip = new javax.swing.JTextField();
        lblDonorEmail = new javax.swing.JLabel();
        txtDonorEmail = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        lblUsername = new javax.swing.JLabel();
        txtDonorUsername = new javax.swing.JTextField();
        lblDonorPassword = new javax.swing.JLabel();
        txtDonorPassword = new javax.swing.JTextField();
        lblDonorConfirmPassword = new javax.swing.JLabel();
        txtDonorConfirmPassword = new javax.swing.JTextField();
        lblDNameError = new javax.swing.JLabel();
        lblDphnoError = new javax.swing.JLabel();
        lblDonorAddressError = new javax.swing.JLabel();
        lblDcityError = new javax.swing.JLabel();
        lblDstateError = new javax.swing.JLabel();
        lblDzipError = new javax.swing.JLabel();
        lblDemailError = new javax.swing.JLabel();
        lblUsernameError = new javax.swing.JLabel();
        lblDonorPasswordError = new javax.swing.JLabel();
        lblDonorConfirmError = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        LabelImage = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(2000, 1100));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblDonProfileTitle.setFont(new java.awt.Font("Georgia", 1, 29)); // NOI18N
        lblDonProfileTitle.setForeground(new java.awt.Color(255, 93, 119));
        lblDonProfileTitle.setText("My Food Profile");
        add(lblDonProfileTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(393, 20, -1, -1));

        lblDonorName.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblDonorName.setText("Name :");
        add(lblDonorName, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 100, -1, -1));

        txtDonorName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDonorName.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDonorName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDonorNameFocusLost(evt);
            }
        });
        add(txtDonorName, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 90, 137, -1));

        lblDonorContact.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblDonorContact.setText("Phone Number :");
        add(lblDonorContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 140, -1, -1));

        txtDonorContact.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDonorContact.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDonorContact.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDonorContactFocusLost(evt);
            }
        });
        add(txtDonorContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 130, 137, -1));

        lblDonorAddress.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblDonorAddress.setText("Address :");
        add(lblDonorAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 180, -1, -1));

        txtDonorAddress.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDonorAddress.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDonorAddress.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDonorAddressFocusLost(evt);
            }
        });
        add(txtDonorAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 170, 137, -1));

        lblDonorCity.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblDonorCity.setText("City :");
        add(lblDonorCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 230, -1, -1));

        txtDonorCity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDonorCity.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDonorCity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDonorCityFocusLost(evt);
            }
        });
        add(txtDonorCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 220, 137, -1));

        lblDonorstate.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblDonorstate.setText("State :");
        add(lblDonorstate, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 270, -1, -1));

        txtDonorState.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDonorState.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDonorState.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDonorStateFocusLost(evt);
            }
        });
        add(txtDonorState, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 260, 137, -1));

        lblDonorZip.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblDonorZip.setText("Zipcode :");
        add(lblDonorZip, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 310, -1, -1));

        txtDonorZip.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDonorZip.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDonorZip.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDonorZipFocusLost(evt);
            }
        });
        add(txtDonorZip, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 300, 137, -1));

        lblDonorEmail.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblDonorEmail.setText("Email Id :");
        add(lblDonorEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 360, -1, -1));

        txtDonorEmail.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDonorEmail.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDonorEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDonorEmailFocusLost(evt);
            }
        });
        add(txtDonorEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 350, 137, -1));

        btnSubmit.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(326, 551, 60, 30));

        btnEdit.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        btnEdit.setText("Edit Profile");
        btnEdit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        add(btnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 550, 80, 30));

        lblUsername.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblUsername.setText("Username :");
        add(lblUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 400, -1, -1));

        txtDonorUsername.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDonorUsername.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDonorUsername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDonorUsernameFocusLost(evt);
            }
        });
        add(txtDonorUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 390, 137, -1));

        lblDonorPassword.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblDonorPassword.setText("Password :");
        add(lblDonorPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 440, -1, -1));

        txtDonorPassword.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDonorPassword.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDonorPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDonorPasswordFocusLost(evt);
            }
        });
        add(txtDonorPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 430, 137, -1));

        lblDonorConfirmPassword.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblDonorConfirmPassword.setText("Confirm Password :");
        add(lblDonorConfirmPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 490, -1, -1));

        txtDonorConfirmPassword.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDonorConfirmPassword.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDonorConfirmPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDonorConfirmPasswordFocusLost(evt);
            }
        });
        add(txtDonorConfirmPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 480, 137, -1));

        lblDNameError.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblDNameError, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 80, -1, -1));

        lblDphnoError.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblDphnoError, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 130, -1, -1));

        lblDonorAddressError.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblDonorAddressError, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 170, -1, -1));

        lblDcityError.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblDcityError, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 220, -1, -1));

        lblDstateError.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblDstateError, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 10, -1, -1));

        lblDzipError.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblDzipError, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 300, -1, -1));

        lblDemailError.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblDemailError, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 350, -1, -1));

        lblUsernameError.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblUsernameError, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 390, -1, -1));

        lblDonorPasswordError.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblDonorPasswordError, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 430, -1, -1));

        lblDonorConfirmError.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblDonorConfirmError, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 480, -1, -1));

        btnCancel.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 550, 60, 30));

        LabelImage.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        LabelImage.setText(" ");
        add(LabelImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1500, 700));
    }// </editor-fold>//GEN-END:initComponents

    public void setBG() {
        try {
            LabelImage.setMinimumSize(new Dimension(1500, 1000));
            LabelImage.setPreferredSize(new Dimension(1500, 1000));
            LabelImage.setMaximumSize(new Dimension(1500, 1000));
            
            Image img = ImageIO.read(getClass().getResource("/Images/blurbg.jpeg"));
            
            Image newimg = img.getScaledInstance(1450, 950, java.awt.Image.SCALE_SMOOTH);
            LabelImage.setIcon(new ImageIcon(newimg));
        } catch (IOException ex) {
            Logger.getLogger(DonorProfilePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    

    private void txtDonorNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDonorNameFocusLost
        // TODO add your handling code here:
        if (!(txtDonorName.getText().matches("^[a-zA-Z]*$"))) {
            //enter alphabets 
            lblDNameError.setText("Input invalid. Please enter alphabets only");
        } else {
            lblDNameError.setText("");
        }
    }//GEN-LAST:event_txtDonorNameFocusLost

    private void txtDonorContactFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDonorContactFocusLost
        // TODO add your handling code here:
        if (!(txtDonorContact.getText().matches("^[0-9]*$")) || !(txtDonorContact.getText().length() == 10)) {
            
            //enter a valid phone number
            lblDphnoError.setText("Please enter valid phone number");
        } else {
            lblDphnoError.setText("");

        }
    }//GEN-LAST:event_txtDonorContactFocusLost

    private void txtDonorAddressFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDonorAddressFocusLost
        // TODO add your handling code here:
        if (!(txtDonorAddress.getText().matches("^[a-zA-Z]*$"))) {
            //enter only alphabets
            lblDonorAddressError.setText("Invalid input. Please enter only alphabets");
        } else {
            lblDonorAddressError.setText("");
        }
    }//GEN-LAST:event_txtDonorAddressFocusLost

    private void txtDonorCityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDonorCityFocusLost
        // TODO add your handling code here:
        if (!(txtDonorCity.getText().matches("^[a-zA-Z]*$"))) {
             //enter only alphabets
            lblDcityError.setText("Input invalid. Please enter only alphabets");
        } else {
            lblDcityError.setText("");
        }
    }//GEN-LAST:event_txtDonorCityFocusLost

    private void txtDonorStateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDonorStateFocusLost
        // TODO add your handling code here:
        if (!(txtDonorState.getText().matches("^[a-zA-Z]*$"))) {
             //enter only alphabets
            lblDstateError.setText("Input invalid. Please enter only alphabets");
        } else {
            lblDstateError.setText("");
        }
    }//GEN-LAST:event_txtDonorStateFocusLost

    private void txtDonorZipFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDonorZipFocusLost
        // TODO add your handling code here:
        if ((txtDonorZip.getText().matches("^[a-zA-Z]*$"))) {
             //enter only numbers 
            lblDzipError.setText("Input invalid. Please enter only numbers");
        } else {
            lblDzipError.setText("");
        }
    }//GEN-LAST:event_txtDonorZipFocusLost

    private void txtDonorEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDonorEmailFocusLost
        // TODO add your handling code here:
        if ((!txtDonorEmail.getText().isEmpty()) && !txtDonorEmail.getText().matches("^[a-zA-Z0-9_!#$%&'*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$")) {
             //enter valid  email address 
            lblDemailError.setText("Please Provide Valid Email Address!!");
        } else {
            lblDemailError.setText("");
        }
    }//GEN-LAST:event_txtDonorEmailFocusLost

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        if (!nullCheck()) {
            ArrayList<Donor> donList = ecosystem.getDonDir().getDonorList();
            for (Donor d : donList) {
                  //The get method returns the variable name's value.
                //The name variable is given a parameter (newName), which is assigned via the set method.
                if (d.getDonorAccount().getUsername().equals(DonUname)) {
                    d.setDonorName(txtDonorName.getText());
                    d.setDonorPhno(txtDonorContact.getText());
                    d.setDonorEmail(txtDonorEmail.getText());
                    d.setDonorAddres(txtDonorAddress.getText());
                    d.setDonorCity(txtDonorCity.getText());
                    d.setDonorState(txtDonorState.getText());
                    d.setDonorZipcode(txtDonorZip.getText());
                    d.setDonUserName(txtDonorUsername.getText());
                    d.setDonPwd(txtDonorPassword.getText());
                }
            }
            // ecosystem.setFCWDirectory(fcwList);
            donDir = ecosystem.getDonDir();
            ecosystem.setDonDir(donDir);
            
             //JOptionPane.showMessageDialog is used to create an information-message dialog titled "Message"
             //profile will be updated on submit 
            JOptionPane.showMessageDialog(this, "Profile updated successfully");
            disableFields();
        } else {
            //fill all fields
            JOptionPane.showMessageDialog(this, "All fields are mandatory!");
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        enablefields();
    }//GEN-LAST:event_btnEditActionPerformed

    private void txtDonorUsernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDonorUsernameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDonorUsernameFocusLost

    private void txtDonorPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDonorPasswordFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDonorPasswordFocusLost

    private void txtDonorConfirmPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDonorConfirmPasswordFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDonorConfirmPasswordFocusLost

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        disableFields();
    }//GEN-LAST:event_btnCancelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelImage;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel lblDNameError;
    private javax.swing.JLabel lblDcityError;
    private javax.swing.JLabel lblDemailError;
    private javax.swing.JLabel lblDonProfileTitle;
    private javax.swing.JLabel lblDonorAddress;
    private javax.swing.JLabel lblDonorAddressError;
    private javax.swing.JLabel lblDonorCity;
    private javax.swing.JLabel lblDonorConfirmError;
    private javax.swing.JLabel lblDonorConfirmPassword;
    private javax.swing.JLabel lblDonorContact;
    private javax.swing.JLabel lblDonorEmail;
    private javax.swing.JLabel lblDonorName;
    private javax.swing.JLabel lblDonorPassword;
    private javax.swing.JLabel lblDonorPasswordError;
    private javax.swing.JLabel lblDonorZip;
    private javax.swing.JLabel lblDonorstate;
    private javax.swing.JLabel lblDphnoError;
    private javax.swing.JLabel lblDstateError;
    private javax.swing.JLabel lblDzipError;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lblUsernameError;
    private javax.swing.JTextField txtDonorAddress;
    private javax.swing.JTextField txtDonorCity;
    private javax.swing.JTextField txtDonorConfirmPassword;
    private javax.swing.JTextField txtDonorContact;
    private javax.swing.JTextField txtDonorEmail;
    private javax.swing.JTextField txtDonorName;
    private javax.swing.JTextField txtDonorPassword;
    private javax.swing.JTextField txtDonorState;
    private javax.swing.JTextField txtDonorUsername;
    private javax.swing.JTextField txtDonorZip;
    // End of variables declaration//GEN-END:variables

    private void populateFields() {
        for (Donor d : ecosystem.getDonDir().getDonorList()) {
            if(d.getDonorName().equals(DonName)){
            txtDonorName.setText(d.getDonorName());
            txtDonorName.setEnabled(false);
            txtDonorContact.setText(d.getDonorPhno());
            txtDonorContact.setEnabled(false);
            txtDonorEmail.setText(d.getDonorEmail());
            txtDonorEmail.setEnabled(false);
            txtDonorAddress.setText(d.getDonorAddres());
            txtDonorAddress.setEnabled(false);
            txtDonorCity.setText(d.getDonorCity());
            txtDonorCity.setEnabled(false);
            txtDonorState.setText(d.getDonorState());
            txtDonorState.setEnabled(false);
            txtDonorZip.setText(d.getDonorState());
            txtDonorZip.setEnabled(false);
            txtDonorUsername.setText(d.getDonorAccount().getUsername());
            txtDonorUsername.setEnabled(false);
            txtDonorPassword.setText(d.getDonorAccount().getPassword());
            txtDonorPassword.setEnabled(false);
            }
        }
    }

    private void enablefields() {
        txtDonorName.setEnabled(true);
        txtDonorContact.setEnabled(true);
        txtDonorEmail.setEnabled(true);
        txtDonorAddress.setEnabled(true);
        txtDonorCity.setEnabled(true);
        txtDonorState.setEnabled(true);
        txtDonorZip.setEnabled(true);
        txtDonorUsername.setEnabled(true);
        txtDonorPassword.setEnabled(true);
        btnSubmit.setVisible(true);
        btnCancel.setVisible(true);
        lblDonorConfirmPassword.setVisible(true);
        txtDonorConfirmPassword.setVisible(true);
    }

    private boolean nullCheck() {
        if (txtDonorName.getText().length() != 0 && txtDonorContact.getText().length() != 0 && txtDonorEmail.getText().length() != 0
                && txtDonorAddress.getText().length() != 0 && txtDonorCity.getText().length() != 0 && txtDonorState.getText().length() != 0
                && txtDonorZip.getText().length() != 0 && txtDonorUsername.getText().length() != 0 && txtDonorPassword.getText().length() != 0
                && txtDonorConfirmPassword.getText().length() != 0) {
            return false;
        } else {
            return true;
        }
    }

    private void disableFields() {
        txtDonorName.setEnabled(false);
        txtDonorContact.setEnabled(false);
        txtDonorEmail.setEnabled(false);
        txtDonorAddress.setEnabled(false);
        txtDonorCity.setEnabled(false);
        txtDonorState.setEnabled(false);
        txtDonorZip.setEnabled(false);
        txtDonorUsername.setEnabled(false);
        txtDonorPassword.setEnabled(false);
        btnSubmit.setVisible(false);
        btnCancel.setVisible(false);
        lblDonorConfirmPassword.setVisible(false);
        txtDonorConfirmPassword.setVisible(false);
        lblDNameError.setText("");
        lblDphnoError.setText("");
        lblDemailError.setText("");
        lblDonorAddressError.setText("");
        lblDcityError.setText("");
        lblDstateError.setText("");
        lblDzipError.setText("");
        lblUsernameError.setText("");
        lblDonorPasswordError.setText("");
        lblDonorConfirmError.setText("");
    }
}
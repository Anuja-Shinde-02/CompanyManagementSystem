/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.RequestorRole;

import Business.EcoSystem;
import Business.Requestor.Requestor;
import Business.Requestor.RequestorDirectory;
import Business.UserAccount.UserAccount;
import java.awt.Dimension;
import java.awt.Image;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author anujashinde
 */
public class RequestorProfilePanel extends javax.swing.JPanel {

    /**
     * Creates new form RequestorProfilePanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount userAcc;
    String reqUname;
    String reqName;
    RequestorDirectory reqDir;
    public RequestorProfilePanel(JPanel userProcessContainer,EcoSystem ecosystem,UserAccount userAcc) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.userAcc = userAcc;
        btnSubmit.setVisible(false);
        btnCancel.setVisible(false);
        lblReqConfPassword.setVisible(false);
        txtReqConfPassword.setVisible(false);
        reqUname = userAcc.getUsername();
        reqName = userAcc.getEmployee().getName();
        populateFields();
        setBG();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtReqAddress = new javax.swing.JTextField();
        lblReqAddress = new javax.swing.JLabel();
        lblReqContact = new javax.swing.JLabel();
        txtDname = new javax.swing.JTextField();
        lblDName = new javax.swing.JLabel();
        lblRequestorProfileTitle = new javax.swing.JLabel();
        txtReqConfPassword = new javax.swing.JTextField();
        lblReqConfPassword = new javax.swing.JLabel();
        txtReqPassword = new javax.swing.JTextField();
        lblReqPassword = new javax.swing.JLabel();
        txtReqUsername = new javax.swing.JTextField();
        txtReqContact = new javax.swing.JTextField();
        lblReqUsername = new javax.swing.JLabel();
        btnEdit = new javax.swing.JButton();
        btnSubmit = new javax.swing.JButton();
        txtReqEmail = new javax.swing.JTextField();
        lblReqEmail = new javax.swing.JLabel();
        txtReqZip = new javax.swing.JTextField();
        lblReqZip = new javax.swing.JLabel();
        txtReqState = new javax.swing.JTextField();
        lblReqState = new javax.swing.JLabel();
        txtReqcity = new javax.swing.JTextField();
        lblReqCity = new javax.swing.JLabel();
        lblRNameError = new javax.swing.JLabel();
        lblRContactError = new javax.swing.JLabel();
        lblRAddressError = new javax.swing.JLabel();
        lblRcityError = new javax.swing.JLabel();
        lblRstateError = new javax.swing.JLabel();
        lblRzipError = new javax.swing.JLabel();
        lblREmailError = new javax.swing.JLabel();
        lblUsernameError = new javax.swing.JLabel();
        lblRPasswordError = new javax.swing.JLabel();
        lblRConfPasswordError = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        LabelImg = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtReqAddress.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtReqAddress.setPreferredSize(new java.awt.Dimension(150, 25));
        txtReqAddress.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtReqAddressFocusLost(evt);
            }
        });
        add(txtReqAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 180, 137, -1));

        lblReqAddress.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblReqAddress.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblReqAddress.setText("Address");
        add(lblReqAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(389, 184, -1, -1));

        lblReqContact.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblReqContact.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblReqContact.setText("Phone Number");
        add(lblReqContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(349, 141, -1, -1));

        txtDname.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDname.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDnameFocusLost(evt);
            }
        });
        add(txtDname, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 91, 137, -1));

        lblDName.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblDName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblDName.setText("Name");
        add(lblDName, new org.netbeans.lib.awtextra.AbsoluteConstraints(401, 95, -1, -1));

        lblRequestorProfileTitle.setFont(new java.awt.Font("Lucida Handwriting", 1, 24)); // NOI18N
        lblRequestorProfileTitle.setForeground(new java.awt.Color(255, 93, 119));
        lblRequestorProfileTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRequestorProfileTitle.setText("My Food Requestor Profile");
        add(lblRequestorProfileTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 30, -1, -1));

        txtReqConfPassword.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtReqConfPassword.setPreferredSize(new java.awt.Dimension(150, 25));
        txtReqConfPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtReqConfPasswordFocusLost(evt);
            }
        });
        add(txtReqConfPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 481, 137, -1));

        lblReqConfPassword.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblReqConfPassword.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblReqConfPassword.setText("Confirm Password");
        add(lblReqConfPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 480, -1, 20));

        txtReqPassword.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtReqPassword.setPreferredSize(new java.awt.Dimension(150, 25));
        txtReqPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtReqPasswordFocusLost(evt);
            }
        });
        add(txtReqPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 438, 137, -1));

        lblReqPassword.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblReqPassword.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblReqPassword.setText("Password");
        add(lblReqPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(381, 442, -1, -1));

        txtReqUsername.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtReqUsername.setPreferredSize(new java.awt.Dimension(150, 25));
        txtReqUsername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtReqUsernameFocusLost(evt);
            }
        });
        add(txtReqUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 395, 137, -1));

        txtReqContact.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtReqContact.setPreferredSize(new java.awt.Dimension(150, 25));
        txtReqContact.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtReqContactFocusLost(evt);
            }
        });
        add(txtReqContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 137, 137, -1));

        lblReqUsername.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblReqUsername.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblReqUsername.setText("Username");
        add(lblReqUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(381, 399, -1, -1));

        btnEdit.setFont(new java.awt.Font("Lucida Sans", 0, 14)); // NOI18N
        btnEdit.setText("Edit Profile");
        btnEdit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        add(btnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 540, 100, 30));

        btnSubmit.setFont(new java.awt.Font("Lucida Sans", 0, 14)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 540, 80, 30));

        txtReqEmail.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtReqEmail.setPreferredSize(new java.awt.Dimension(150, 25));
        txtReqEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtReqEmailFocusLost(evt);
            }
        });
        add(txtReqEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 352, 137, -1));

        lblReqEmail.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblReqEmail.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblReqEmail.setText("Email Id");
        add(lblReqEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(384, 356, -1, -1));

        txtReqZip.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtReqZip.setPreferredSize(new java.awt.Dimension(150, 25));
        txtReqZip.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtReqZipFocusLost(evt);
            }
        });
        add(txtReqZip, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 309, 137, -1));

        lblReqZip.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblReqZip.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblReqZip.setText("Zipcode");
        add(lblReqZip, new org.netbeans.lib.awtextra.AbsoluteConstraints(388, 313, -1, -1));

        txtReqState.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtReqState.setPreferredSize(new java.awt.Dimension(150, 25));
        txtReqState.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtReqStateFocusLost(evt);
            }
        });
        add(txtReqState, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 266, 137, -1));

        lblReqState.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblReqState.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblReqState.setText("State");
        add(lblReqState, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 270, -1, -1));

        txtReqcity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtReqcity.setPreferredSize(new java.awt.Dimension(150, 25));
        txtReqcity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtReqcityFocusLost(evt);
            }
        });
        add(txtReqcity, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 223, 137, -1));

        lblReqCity.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblReqCity.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblReqCity.setText("City");
        add(lblReqCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 227, -1, -1));

        lblRNameError.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblRNameError, new org.netbeans.lib.awtextra.AbsoluteConstraints(625, 90, 160, 20));

        lblRContactError.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblRContactError, new org.netbeans.lib.awtextra.AbsoluteConstraints(619, 137, 160, 20));

        lblRAddressError.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblRAddressError, new org.netbeans.lib.awtextra.AbsoluteConstraints(619, 180, 160, 20));

        lblRcityError.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblRcityError, new org.netbeans.lib.awtextra.AbsoluteConstraints(625, 223, 160, 20));

        lblRstateError.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblRstateError, new org.netbeans.lib.awtextra.AbsoluteConstraints(625, 266, 160, 20));

        lblRzipError.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblRzipError, new org.netbeans.lib.awtextra.AbsoluteConstraints(625, 309, 160, 20));

        lblREmailError.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblREmailError, new org.netbeans.lib.awtextra.AbsoluteConstraints(625, 352, 160, 20));

        lblUsernameError.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblUsernameError, new org.netbeans.lib.awtextra.AbsoluteConstraints(619, 395, 160, 20));

        lblRPasswordError.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblRPasswordError, new org.netbeans.lib.awtextra.AbsoluteConstraints(619, 438, 160, 20));

        lblRConfPasswordError.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(lblRConfPasswordError, new org.netbeans.lib.awtextra.AbsoluteConstraints(619, 481, 160, 20));

        btnCancel.setFont(new java.awt.Font("Lucida Sans", 0, 14)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 540, 80, 30));

        LabelImg.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        LabelImg.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        add(LabelImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 0, 1590, 800));
    }// </editor-fold>//GEN-END:initComponents

    private void txtReqAddressFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtReqAddressFocusLost
        // TODO add your handling code here:
        if(!(txtReqAddress.getText().matches("^[a-zA-Z]*$"))){
            lblRAddressError.setText("Input invalid. Please enter only alphabets");
        }
        else{
            lblRAddressError.setText("");
        }
    }//GEN-LAST:event_txtReqAddressFocusLost

    private void txtDnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDnameFocusLost
        // TODO add your handling code here:
        if(!(txtDname.getText().matches("^[a-zA-Z]*$"))){
            lblRNameError.setText("Input invalid. Please enter only alphabets");
        }
        else{
            lblRNameError.setText("");
        }
    }//GEN-LAST:event_txtDnameFocusLost

    public void setBG() {
        try {
            LabelImg.setMinimumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImg.setPreferredSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImg.setMaximumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));

            Image img = ImageIO.read(getClass().getResource("/Images/blurbg.jpeg"));

            Image newimg = img.getScaledInstance(1650, userProcessContainer.getHeight(), java.awt.Image.SCALE_SMOOTH);
            LabelImg.setIcon(new ImageIcon(newimg));
        } catch (IOException ex) {
            Logger.getLogger(RequestorProfilePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void txtReqConfPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtReqConfPasswordFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtReqConfPasswordFocusLost

    private void txtReqPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtReqPasswordFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtReqPasswordFocusLost

    private void txtReqUsernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtReqUsernameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtReqUsernameFocusLost

    private void txtReqContactFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtReqContactFocusLost
        // TODO add your handling code here:
        if(!(txtReqContact.getText().matches("^[0-9]*$")) || !(txtReqContact.getText().length()==10)) {
            lblRContactError.setText("Please enter a valid phone number");
        }
        else{
            lblRContactError.setText("");

        }
    }//GEN-LAST:event_txtReqContactFocusLost

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        enablefields();
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        if(!nullCheck()){
            ArrayList<Requestor> reqList = ecosystem.getReqDir().getReqAccList();
            for(Requestor r: reqList)
            {
                if(r.getReqAccount().getUsername().equals(reqUname))
                {
                    //The get method returns the variable name's value.
                   //The name variable is given a parameter (newName), which is assigned via the set method.
                    
                    r.setReqName(txtDname.getText());
                    r.setReqPhno(txtReqContact.getText());
                    r.setReqEmail(txtReqEmail.getText());
                    r.setReqAddres(txtReqAddress.getText());
                    r.setReqCity(txtReqcity.getText());
                    r.setReqState(txtReqState.getText());
                    r.setReqZipcode(txtReqZip.getText());
                    r.setReqUserName(txtReqUsername.getText());
                    r.setReqPwd(txtReqPassword.getText());
                }
            }
            // ecosystem.setFCWDirectory(fcwList);
            reqDir = ecosystem.getReqDir();
            ecosystem.setReqDir(reqDir);
            JOptionPane.showMessageDialog(this, "Profile updated successfully");
            disableFields();
        }
        else{
              //JOptionPane.showMessageDialog is used to create an information-message dialog titled "Message"
            JOptionPane.showMessageDialog(this, "All fields are mandatory!");
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void txtReqEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtReqEmailFocusLost
        // TODO add your handling code here:
        if ((!txtReqEmail.getText().isEmpty()) && !txtReqEmail.getText().matches("^[a-zA-Z0-9_!#$%&'*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$")) {
            
            //user needs to provide valid email address 
            lblREmailError.setText( "Please Provide Valid Email Address !!");
        }
        else{
            lblREmailError.setText("");
        }
    }//GEN-LAST:event_txtReqEmailFocusLost

    private void txtReqZipFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtReqZipFocusLost
        // TODO add your handling code here:
        if((txtReqZip.getText().matches("^[a-zA-Z]*$"))){
            
            // you will have to add the Zip Code in numbers only and in proper format
            lblRzipError.setText("Input invalid. Please enter only numbers");
        }
        else{
            lblRzipError.setText("");
        }
    }//GEN-LAST:event_txtReqZipFocusLost

    private void txtReqStateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtReqStateFocusLost
        // TODO add your handling code here:
        if(!(txtReqState.getText().matches("^[a-zA-Z]*$"))){
            
            //State should be in alphabets only 
            lblRstateError.setText("Input invalid. Please enter only alphabets");
        }
        else{
            lblRstateError.setText("");
        }
    }//GEN-LAST:event_txtReqStateFocusLost

    private void txtReqcityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtReqcityFocusLost
        // TODO add your handling code here:
        if(!(txtReqcity.getText().matches("^[a-zA-Z]*$"))){
            
            //city should be in alphabets only 
            lblRcityError.setText("Input invalid. Please enter only alphabets");
        }
        else{
            lblRcityError.setText("");
        }
    }//GEN-LAST:event_txtReqcityFocusLost

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        disableFields();
        
    }//GEN-LAST:event_btnCancelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelImg;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel lblDName;
    private javax.swing.JLabel lblRAddressError;
    private javax.swing.JLabel lblRConfPasswordError;
    private javax.swing.JLabel lblRContactError;
    private javax.swing.JLabel lblREmailError;
    private javax.swing.JLabel lblRNameError;
    private javax.swing.JLabel lblRPasswordError;
    private javax.swing.JLabel lblRcityError;
    private javax.swing.JLabel lblReqAddress;
    private javax.swing.JLabel lblReqCity;
    private javax.swing.JLabel lblReqConfPassword;
    private javax.swing.JLabel lblReqContact;
    private javax.swing.JLabel lblReqEmail;
    private javax.swing.JLabel lblReqPassword;
    private javax.swing.JLabel lblReqState;
    private javax.swing.JLabel lblReqUsername;
    private javax.swing.JLabel lblReqZip;
    private javax.swing.JLabel lblRequestorProfileTitle;
    private javax.swing.JLabel lblRstateError;
    private javax.swing.JLabel lblRzipError;
    private javax.swing.JLabel lblUsernameError;
    private javax.swing.JTextField txtDname;
    private javax.swing.JTextField txtReqAddress;
    private javax.swing.JTextField txtReqConfPassword;
    private javax.swing.JTextField txtReqContact;
    private javax.swing.JTextField txtReqEmail;
    private javax.swing.JTextField txtReqPassword;
    private javax.swing.JTextField txtReqState;
    private javax.swing.JTextField txtReqUsername;
    private javax.swing.JTextField txtReqZip;
    private javax.swing.JTextField txtReqcity;
    // End of variables declaration//GEN-END:variables

    private void populateFields() {
        for(Requestor r: ecosystem.getReqDir().getReqAccList()){
            if(r.getReqName().equals(reqName)){
            txtDname.setText(r.getReqName());
            txtDname.setEnabled(false);
            txtReqContact.setText(r.getReqPhno());
            txtReqContact.setEnabled(false);
            txtReqEmail.setText(r.getReqEmail());
            txtReqEmail.setEnabled(false);
            txtReqAddress.setText(r.getReqAddres());
            txtReqAddress.setEnabled(false);
            txtReqcity.setText(r.getReqCity());
            txtReqcity.setEnabled(false);
            txtReqState.setText(r.getReqState());
            txtReqState.setEnabled(false);
            txtReqZip.setText(r.getReqZipcode());
            txtReqZip.setEnabled(false);
            txtReqUsername.setText(r.getReqAccount().getUsername());
            txtReqUsername.setEnabled(false);
            txtReqPassword.setText(r.getReqAccount().getUsername());
            txtReqPassword.setEnabled(false);
            }
        } 
    } 

    private void enablefields() {
        txtDname.setEnabled(true);
        txtReqContact.setEnabled(true);
        txtReqEmail.setEnabled(true);
        txtReqAddress.setEnabled(true);
        txtReqcity.setEnabled(true);
        txtReqState.setEnabled(true);
        txtReqZip.setEnabled(true);
        txtReqUsername.setEnabled(true);
        txtReqPassword.setEnabled(true);
        btnSubmit.setVisible(true);
        btnCancel.setVisible(true);
        lblReqConfPassword.setVisible(true);
        txtReqConfPassword.setVisible(true);
    }

    private boolean nullCheck() {
        if(txtDname.getText().length()!=0 && txtReqContact.getText().length()!=0 && txtReqEmail.getText().length()!=0 
                && txtReqAddress.getText().length()!=0 && txtReqcity.getText().length()!=0 && txtReqState.getText().length()!=0
                && txtReqZip.getText().length()!=0 && txtReqUsername.getText().length()!=0 && txtReqPassword.getText().length()!=0
                && txtReqConfPassword.getText().length()!=0 )
        {
            return false;
        }
        else return true;
    }

    private void disableFields() {
        txtDname.setEnabled(false);
        txtReqContact.setEnabled(false);
        txtReqEmail.setEnabled(false);
        txtReqAddress.setEnabled(false);
        txtReqcity.setEnabled(false);
        txtReqState.setEnabled(false);
        txtReqZip.setEnabled(false);
        txtReqUsername.setEnabled(false);
        txtReqPassword.setEnabled(false);
        btnSubmit.setVisible(false);
        btnCancel.setVisible(false);
        lblReqConfPassword.setVisible(false);
        txtReqConfPassword.setVisible(false);
        lblRNameError.setText("");
        lblRContactError.setText("");
        lblREmailError.setText("");
        lblRAddressError.setText("");
        lblRcityError.setText("");
        lblRstateError.setText("");
        lblRzipError.setText("");
        lblUsernameError.setText("");
        lblRPasswordError.setText("");
        lblRConfPasswordError.setText("");
    }
    
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.FCAdminRole;

import Business.EcoSystem;
import Business.FCPantry.FCPantry;
import Business.FCPantry.FCPantryItems;
import Business.FCPantry.FCPantryItemsDirectory;
import Business.UserAccount.UserAccount;
import java.awt.Dimension;
import java.awt.Image;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import userinterface.DonorRole.DonorProfilePanel;

/**
 *
 * @author anujashinde 
 */
public class AddPantryItemsPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddPantryItemsPanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount userAcc;
    FCPantryItemsDirectory fcpid;
    String WHname;
    public AddPantryItemsPanel(JPanel userProcessContainer,EcoSystem ecosystem,UserAccount userAcc) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.userAcc = userAcc;
        if(ecosystem.getFCPIDirectory()== null){
         ecosystem.setFCPIDirectory(new FCPantryItemsDirectory());
        }
        String FCAname=userAcc.getEmployee().getName();
        System.out.println(FCAname);
        WHname= ecosystem.getFCWDirectory().getWHname(FCAname);
        System.out.println(WHname);
        lblWarehouseValue.setText(WHname);
        ArrayList<String> PantryList = new ArrayList<String>();
        for (FCPantry fcp : ecosystem.getFCPDirectory().getFcpList()){
            if(fcp.getFcpWHname().equals(WHname)){
                PantryList.add(fcp.getFcpName());
            }
            
        }
        cbPantry.setModel(new DefaultComboBoxModel<String>(PantryList.toArray(new String[0])));
        txtPantryManager.setEnabled(false);
        if(cbPantry.getSelectedItem() == null || cbPantry.getItemCount() == 0){
        txtPantryManager.setText("");
        }else{ txtPantryManager.setText(getMngrName(cbPantry.getSelectedItem().toString())); }
        setBG();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAddFCPTitle = new javax.swing.JLabel();
        lblWarehouseName = new javax.swing.JLabel();
        txtPantryManager = new javax.swing.JTextField();
        lblPantryManager = new javax.swing.JLabel();
        txtFoodDonatedItem = new javax.swing.JTextField();
        lblFoodDonationItem = new javax.swing.JLabel();
        txtItemQty = new javax.swing.JTextField();
        lblWarehouseValue = new javax.swing.JLabel();
        lblPantry = new javax.swing.JLabel();
        cbPantry = new javax.swing.JComboBox<>();
        btnSubmit = new javax.swing.JButton();
        lblitemID = new javax.swing.JLabel();
        txtFoodItemID = new javax.swing.JTextField();
        btnclear = new javax.swing.JButton();
        lblFoodDonatedQty = new javax.swing.JLabel();
        LabelImg = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblAddFCPTitle.setFont(new java.awt.Font("Lucida Handwriting", 1, 24)); // NOI18N
        lblAddFCPTitle.setForeground(new java.awt.Color(255, 93, 119));
        lblAddFCPTitle.setText("! Add Pantry Items !");
        add(lblAddFCPTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, -1, -1));

        lblWarehouseName.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        lblWarehouseName.setText("Warehouse Name :");
        add(lblWarehouseName, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 130, -1, -1));

        txtPantryManager.setEditable(false);
        txtPantryManager.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtPantryManager.setPreferredSize(new java.awt.Dimension(150, 25));
        txtPantryManager.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPantryManagerFocusLost(evt);
            }
        });
        txtPantryManager.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPantryManagerActionPerformed(evt);
            }
        });
        add(txtPantryManager, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 220, 137, -1));

        lblPantryManager.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        lblPantryManager.setText("Pantry Manager :");
        add(lblPantryManager, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 230, -1, -1));

        txtFoodDonatedItem.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFoodDonatedItem.setPreferredSize(new java.awt.Dimension(150, 25));
        txtFoodDonatedItem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFoodDonatedItemFocusLost(evt);
            }
        });
        add(txtFoodDonatedItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 320, 137, -1));

        lblFoodDonationItem.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        lblFoodDonationItem.setText("Food Item :");
        add(lblFoodDonationItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 330, -1, -1));

        txtItemQty.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtItemQty.setPreferredSize(new java.awt.Dimension(150, 25));
        add(txtItemQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 370, 137, -1));

        lblWarehouseValue.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        add(lblWarehouseValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 130, 140, 20));

        lblPantry.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        lblPantry.setText(" Pantry :");
        add(lblPantry, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 170, -1, -1));

        cbPantry.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbPantry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPantryActionPerformed(evt);
            }
        });
        add(cbPantry, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 170, 140, -1));

        btnSubmit.setFont(new java.awt.Font("Lucida Sans", 0, 14)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(297, 430, 80, -1));

        lblitemID.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        lblitemID.setText("Item ID :");
        add(lblitemID, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 280, -1, -1));

        txtFoodItemID.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFoodItemID.setPreferredSize(new java.awt.Dimension(150, 25));
        txtFoodItemID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFoodItemIDFocusLost(evt);
            }
        });
        add(txtFoodItemID, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 270, 137, -1));

        btnclear.setFont(new java.awt.Font("Lucida Sans", 0, 14)); // NOI18N
        btnclear.setText("Clear");
        btnclear.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });
        add(btnclear, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 430, 90, -1));

        lblFoodDonatedQty.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        lblFoodDonatedQty.setText("Item Quantity :");
        add(lblFoodDonatedQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 380, -1, -1));
        add(LabelImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1650, 970));
    }// </editor-fold>//GEN-END:initComponents

     public void setBG() {
        try {
            LabelImg.setMinimumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImg.setPreferredSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImg.setMaximumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));

            Image img = ImageIO.read(getClass().getResource("/Images/blurbg.jpeg"));

            Image newimg = img.getScaledInstance(1500, userProcessContainer.getHeight(), java.awt.Image.SCALE_SMOOTH);
            LabelImg.setIcon(new ImageIcon(newimg));
            //IOException is the base class for thrown exceptions
        } catch (IOException ex) {
            Logger.getLogger(DonorProfilePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void txtPantryManagerFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPantryManagerFocusLost
        // TODO add your handling code here:
     
    }//GEN-LAST:event_txtPantryManagerFocusLost

    private void txtFoodDonatedItemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFoodDonatedItemFocusLost
        // TODO add your handling code here:
      
    }//GEN-LAST:event_txtFoodDonatedItemFocusLost

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        if(!nullCheck()){
            FCPantryItems fcpi=new FCPantryItems();
            fcpi.setFcpitemid(txtFoodItemID.getText());
            fcpi.setFcpWHname(WHname);
            fcpi.setPantryName(String.valueOf(cbPantry.getSelectedItem()));
            fcpi.setPantryManager(txtPantryManager.getText());
            fcpi.setFoodItem(txtFoodDonatedItem.getText());
            fcpi.setFoodQuan(Integer.parseInt(txtItemQty.getText()));           
            fcpid = ecosystem.getFCPIDirectory();
            fcpid.addFCPItems(fcpi);
            ecosystem.setFCPIDirectory(fcpid);
             //JOptionPane.showMessageDialog is used to create an information-message dialog titled "Message"
             //by submitting the items will be added in the oantry successfully 
            JOptionPane.showMessageDialog(this, "Items added to pantry successfully!");
            clearfields(); 
        }
        else{
            //  fill all the fields
            JOptionPane.showMessageDialog(this, "Please make sure that you have filled all mandatory fields");
        }
    }

    private void clearfields() {
        txtFoodItemID.setText("");
       if(cbPantry.getSelectedItem().toString().isEmpty()){
        txtPantryManager.setText("");
        }else{ txtPantryManager.setText(getMngrName(cbPantry.getSelectedItem().toString())); }
        txtFoodDonatedItem.setText("");
        txtItemQty.setText("");
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void cbPantryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPantryActionPerformed
        // TODO add your handling code here:
        String fpname=cbPantry.getSelectedItem().toString();
        txtPantryManager.setText(getMngrName(fpname));
    }//GEN-LAST:event_cbPantryActionPerformed

    public String getMngrName(String pantry){
        String mngr="";
        for(FCPantry fp: ecosystem.getFCPDirectory().getFcpList()){
            if(fp.getFcpName().equals(pantry)){
                mngr = fp.getFcpManager(); 
            }
        }
        return mngr;
    }
    
    private void txtFoodItemIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFoodItemIDFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFoodItemIDFocusLost

    private void txtPantryManagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPantryManagerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPantryManagerActionPerformed

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        // TODO add your handling code here:
        clearfields();
    }//GEN-LAST:event_btnclearActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelImg;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnclear;
    private javax.swing.JComboBox<String> cbPantry;
    private javax.swing.JLabel lblAddFCPTitle;
    private javax.swing.JLabel lblFoodDonatedQty;
    private javax.swing.JLabel lblFoodDonationItem;
    private javax.swing.JLabel lblPantry;
    private javax.swing.JLabel lblPantryManager;
    private javax.swing.JLabel lblWarehouseName;
    private javax.swing.JLabel lblWarehouseValue;
    private javax.swing.JLabel lblitemID;
    private javax.swing.JTextField txtFoodDonatedItem;
    private javax.swing.JTextField txtFoodItemID;
    private javax.swing.JTextField txtItemQty;
    private javax.swing.JTextField txtPantryManager;
    // End of variables declaration//GEN-END:variables

    private boolean nullCheck() {
        if(txtPantryManager.getText().length()!=0 && txtFoodDonatedItem.getText().length()!=0 && txtItemQty.getText().length()!=0)
        {
            return false;
        }
        else return true;
    }
}

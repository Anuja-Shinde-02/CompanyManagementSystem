/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.FCAdminRole;

import Business.EcoSystem;
import Business.FCPantry.FCPantryItems;
import Business.FCPantry.FCPantryItemsDirectory;
import Business.UserAccount.UserAccount;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.io.IOException;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anujashinde
 */
public class ViewPantryItemsPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewPantryItemsPanel
     */
    JPanel userProcessContainer;
    UserAccount userAcc;
    EcoSystem ecosystem;
    FCPantryItemsDirectory fcpid;
    String FCPname;

    public ViewPantryItemsPanel(JPanel userProcessContainer, EcoSystem ecosystem, UserAccount userAcc) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.userAcc = userAcc;
        populatePantryItemsTable();
        //FCPname = ecosystem.getFCPDirectory()
        viewPanel.setVisible(false);
        setBG();
        makeTableTransparent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPantryTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPantryItems = new javax.swing.JTable();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        viewPanel = new javax.swing.JPanel();
        txtFoodDonatedItem = new javax.swing.JTextField();
        txtPantryManager = new javax.swing.JTextField();
        lblWarehouseName = new javax.swing.JLabel();
        txtPantryName = new javax.swing.JTextField();
        lblItemID = new javax.swing.JLabel();
        txtFoodItemQty = new javax.swing.JTextField();
        txtWarehouseName = new javax.swing.JTextField();
        lblFoodDonatedItem = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        lblPantryManager = new javax.swing.JLabel();
        lblPantryName = new javax.swing.JLabel();
        lblitemId = new javax.swing.JLabel();
        lblFoodDonatedQty = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        LabelImg = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        lblPantryTitle.setFont(new java.awt.Font("Lucida Handwriting", 1, 24)); // NOI18N
        lblPantryTitle.setForeground(new java.awt.Color(255, 93, 119));
        lblPantryTitle.setText("! View/Modify Pantry Items !");
        add(lblPantryTitle);
        lblPantryTitle.setBounds(320, 20, 410, 34);

        tblPantryItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Item Id", "Warehouse Name", "Pantry Name", "Pantry Manager", "Food Item", "Item Quantity"
            }
        ));
        tblPantryItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblPantryItemsMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblPantryItems);

        add(jScrollPane1);
        jScrollPane1.setBounds(0, 80, 1140, 153);

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        add(btnEdit);
        btnEdit.setBounds(960, 260, 92, 23);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete);
        btnDelete.setBounds(1050, 260, 92, 23);

        viewPanel.setOpaque(false);
        viewPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtFoodDonatedItem.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFoodDonatedItem.setPreferredSize(new java.awt.Dimension(150, 25));
        txtFoodDonatedItem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFoodDonatedItemFocusLost(evt);
            }
        });
        txtFoodDonatedItem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFoodDonatedItemKeyReleased(evt);
            }
        });
        viewPanel.add(txtFoodDonatedItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 210, 190, -1));

        txtPantryManager.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtPantryManager.setPreferredSize(new java.awt.Dimension(150, 25));
        txtPantryManager.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPantryManagerFocusLost(evt);
            }
        });
        txtPantryManager.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPantryManagerKeyReleased(evt);
            }
        });
        viewPanel.add(txtPantryManager, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 170, 190, -1));

        lblWarehouseName.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        lblWarehouseName.setText("Warehouse Name :");
        viewPanel.add(lblWarehouseName, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, -1, -1));

        txtPantryName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtPantryName.setPreferredSize(new java.awt.Dimension(150, 25));
        txtPantryName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPantryNameFocusLost(evt);
            }
        });
        txtPantryName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPantryNameKeyReleased(evt);
            }
        });
        viewPanel.add(txtPantryName, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 130, 190, -1));

        lblItemID.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        viewPanel.add(lblItemID, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 40, 190, 20));

        txtFoodItemQty.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtFoodItemQty.setPreferredSize(new java.awt.Dimension(150, 25));
        txtFoodItemQty.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFoodItemQtyFocusLost(evt);
            }
        });
        txtFoodItemQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFoodItemQtyKeyReleased(evt);
            }
        });
        viewPanel.add(txtFoodItemQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 260, 190, -1));

        txtWarehouseName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtWarehouseName.setPreferredSize(new java.awt.Dimension(150, 25));
        txtWarehouseName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtWarehouseNameFocusLost(evt);
            }
        });
        txtWarehouseName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtWarehouseNameKeyReleased(evt);
            }
        });
        viewPanel.add(txtWarehouseName, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, 190, -1));

        lblFoodDonatedItem.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        lblFoodDonatedItem.setText("Food Item :");
        viewPanel.add(lblFoodDonatedItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 215, -1, 20));

        btnUpdate.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        viewPanel.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 330, 92, -1));

        lblPantryManager.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        lblPantryManager.setText("Pantry Manager :");
        viewPanel.add(lblPantryManager, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, -1, -1));

        lblPantryName.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        lblPantryName.setText("Pantry Name :");
        viewPanel.add(lblPantryName, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, -1, -1));

        lblitemId.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        lblitemId.setText("Item Id :");
        viewPanel.add(lblitemId, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, -1, -1));

        lblFoodDonatedQty.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        lblFoodDonatedQty.setText("Item Quantity :");
        viewPanel.add(lblFoodDonatedQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, -1, -1));

        btnCancel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        viewPanel.add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 330, 90, -1));

        add(viewPanel);
        viewPanel.setBounds(280, 240, 450, 420);
        add(LabelImg);
        LabelImg.setBounds(0, 0, 3220, 950);
    }// </editor-fold>//GEN-END:initComponents

    public void setBG() {
        try {
            LabelImg.setMinimumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImg.setPreferredSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImg.setMaximumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));

            Image img = ImageIO.read(getClass().getResource("/Images/blurbg.jpeg"));

            Image newimg = img.getScaledInstance(1500, userProcessContainer.getHeight(), java.awt.Image.SCALE_SMOOTH);
            LabelImg.setIcon(new ImageIcon(newimg));
        } catch (IOException ex) {

        }
    }

    public void makeTableTransparent() {
        tblPantryItems.setOpaque(false);
        ((DefaultTableCellRenderer) tblPantryItems.getDefaultRenderer(Object.class)).setOpaque(false);
        tblPantryItems.setShowGrid(false);
        jScrollPane1.setOpaque(false);
        jScrollPane1.getViewport().setOpaque(false);

        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
        headerRenderer.setBackground(Color.WHITE);

        for (int i = 0; i < tblPantryItems.getModel().getColumnCount(); i++) {
            tblPantryItems.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
        }
    }

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPantryItems.getSelectedRow();
        if (selectedRowIndex < 0) {
            
          //JOptionPane.showMessageDialog is used to create an information-message dialog titled "Message"
          //select the record you want
            JOptionPane.showMessageDialog(this, "Please select a record to Edit");
            return;
        }
        viewPanel.setVisible(true);
        DefaultTableModel model = (DefaultTableModel) tblPantryItems.getModel();
        FCPantryItems selectedFCPI = (FCPantryItems) model.getValueAt(selectedRowIndex, 0);
        lblItemID.setText(selectedFCPI.getFcpitemid());
        txtWarehouseName.setText(selectedFCPI.getFcpWHname());
        txtPantryName.setText(selectedFCPI.getPantryName());
        txtPantryManager.setText(selectedFCPI.getPantryManager());
        txtFoodDonatedItem.setText(selectedFCPI.getFoodItem());
        txtFoodItemQty.setText(String.valueOf(selectedFCPI.getFoodQuan()));
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPantryItems.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a record to delete");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblPantryItems.getModel();
        FCPantryItems selectedFCPI = (FCPantryItems) model.getValueAt(selectedRowIndex, 0);
        /* // First delete the customer from employee
        this.system.getEmployeeDirectory().deleteEmployee(selectedRest.getResManagerName());
        // And thne delete the userAccount
        this.system.getUserAccountDirectory().deleteUserAcc(
            this.system.getRestaurantDirectory().getResList().
            get(selectedRowIndex).getUserAcc()
        );
        // finally delete the user from customer directory*/
        //  ecosystem.getFCPDirectory().deleteFCPantry(selectedFCP);
        fcpid = ecosystem.getFCPIDirectory();
        fcpid.deleteFCPItems(selectedFCPI);
        ecosystem.setFCPIDirectory(fcpid);
        
        //data deleted successfully 
        JOptionPane.showMessageDialog(this, "Pantry item deleted successfully");
        populatePantryItemsTable();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtWarehouseNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtWarehouseNameFocusLost
        // TODO add your handling code here:
        if (!(txtWarehouseName.getText().matches("^[a-zA-Z]*$"))) {
            lblPantryManager.setText("Input invalid. Please enter only alphabets");
        } else {
            lblPantryManager.setText("");
        }
    }//GEN-LAST:event_txtWarehouseNameFocusLost

    private void txtWarehouseNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWarehouseNameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWarehouseNameKeyReleased

    private void txtPantryNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPantryNameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPantryNameFocusLost

    private void txtPantryNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPantryNameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPantryNameKeyReleased

    private void txtPantryManagerFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPantryManagerFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPantryManagerFocusLost

    private void txtPantryManagerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPantryManagerKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPantryManagerKeyReleased

    private void txtFoodDonatedItemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFoodDonatedItemFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFoodDonatedItemFocusLost

    private void txtFoodDonatedItemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFoodDonatedItemKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFoodDonatedItemKeyReleased

    private void txtFoodItemQtyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFoodItemQtyFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFoodItemQtyFocusLost

    private void txtFoodItemQtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFoodItemQtyKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFoodItemQtyKeyReleased

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPantryItems.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a record to update");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblPantryItems.getModel();
        String FCPid = lblItemID.getText();
        ArrayList<FCPantryItems> fcpiList = ecosystem.getFCPIDirectory().getFcpiList();
        for (FCPantryItems f : fcpiList) {
            if (f.getFcpitemid().equals(FCPid)) {
                f.setFcpWHname(txtWarehouseName.getText());
                f.setPantryName(txtPantryName.getText());
                f.setPantryManager(txtPantryManager.getText());
                f.setFoodItem(txtFoodDonatedItem.getText());
                f.setFoodQuan(Integer.parseInt(txtFoodItemQty.getText()));
                //UserAccount FCPua=new UserAccount();
                //FCPua.setUsername(txtFCPuname.getText());
                //FCPua.setPassword(txtFCPpwd.getText());
                //f.setFcpAccount(FCPua);
            }

        }
        // ecosystem.setFCWDirectory(fcwList);
        JOptionPane.showMessageDialog(this, "Pantry item details updated successfully");
        clearfields();
        populatePantryItemsTable();
        viewPanel.setVisible(false);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
       viewPanel.setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void tblPantryItemsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPantryItemsMousePressed
        // TODO add your handling code here:
        tblPantryItems.setSelectionForeground(Color.BLUE);
    }//GEN-LAST:event_tblPantryItemsMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelImg;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFoodDonatedItem;
    private javax.swing.JLabel lblFoodDonatedQty;
    private javax.swing.JLabel lblItemID;
    private javax.swing.JLabel lblPantryManager;
    private javax.swing.JLabel lblPantryName;
    private javax.swing.JLabel lblPantryTitle;
    private javax.swing.JLabel lblWarehouseName;
    private javax.swing.JLabel lblitemId;
    private javax.swing.JTable tblPantryItems;
    private javax.swing.JTextField txtFoodDonatedItem;
    private javax.swing.JTextField txtFoodItemQty;
    private javax.swing.JTextField txtPantryManager;
    private javax.swing.JTextField txtPantryName;
    private javax.swing.JTextField txtWarehouseName;
    private javax.swing.JPanel viewPanel;
    // End of variables declaration//GEN-END:variables

    private void populatePantryItemsTable() {
        DefaultTableModel model = (DefaultTableModel) tblPantryItems.getModel();
        model.setRowCount(0);
        for (FCPantryItems fcpi : ecosystem.getFCPIDirectory().getFcpiList()) {
            Object[] row = new Object[6];
            row[0] = fcpi;
            row[1] = fcpi.getFcpWHname();
            row[2] = fcpi.getPantryName();
            row[3] = fcpi.getPantryManager();
            row[4] = fcpi.getFoodItem();
            row[5] = fcpi.getFoodQuan();
            model.addRow(row);
        }
    }

    private void clearfields() {
        txtWarehouseName.setText("");
        txtPantryName.setText("");
        txtPantryManager.setText("");
        txtFoodDonatedItem.setText("");
        txtFoodItemQty.setText("");
        lblItemID.setText("");
    }
}

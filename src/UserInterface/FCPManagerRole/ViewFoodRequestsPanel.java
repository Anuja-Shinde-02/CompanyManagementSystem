/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.FCPManagerRole;

import Business.EcoSystem;
import Business.FCPantry.FCPantry;
import Business.NGOVolunteer.Volunteer;
import Business.Reqorder.Reqorder;
import Business.Reqorder.ReqorderDirectory;
import Business.UserAccount.UserAccount;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.io.IOException;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anujashinde
 */
public class ViewFoodRequestsPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewFoodRequestsPanel
     */
    JPanel userProcessContainer;
    UserAccount userAcc;
    EcoSystem ecosystem;
    String volname;
    String FCPname;
    String FCPmgname;
    String city;
    public ViewFoodRequestsPanel(JPanel userProcessContainer,EcoSystem ecosystem,UserAccount userAcc) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.userAcc = userAcc;
        if(ecosystem.getReqorderDirectory()== null){
         ecosystem.setReqorderDirectory(new ReqorderDirectory());
        }
        FCPmgname = userAcc.getEmployee().getName();
        for(FCPantry fcp: ecosystem.getFCPDirectory().getFcpList()){
            if(fcp.getFcpManager().equals(FCPmgname)){
                 FCPname = fcp.getFcpName();
                 city=fcp.getFcpCity();
            }
        }
        ArrayList<String> VolunteerList = new ArrayList();
        for (Volunteer vol : ecosystem.getVolDir().getVolunteerList()){
            if(vol.getVolCity().equals(city) && vol.getVolAvail().equals("Yes")){
            VolunteerList.add(vol.getVolName());
            }
        }
        comboAssignVolunteer.setModel(new DefaultComboBoxModel<String>(VolunteerList.toArray(new String[0])));
        populateTable();
         setBG();
         makeTableTransparent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblFoodRequestsTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFdReqs = new javax.swing.JTable();
        btnAssign = new javax.swing.JButton();
        lblRequestID = new javax.swing.JLabel();
        txtDonorRequestID = new javax.swing.JTextField();
        lblAssignVolunteer = new javax.swing.JLabel();
        comboAssignVolunteer = new javax.swing.JComboBox<>();
        btnSend = new javax.swing.JButton();
        lblAssignVolunteerTitle = new javax.swing.JLabel();
        LabelImg = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblFoodRequestsTitle.setFont(new java.awt.Font("Lucida Handwriting", 1, 24)); // NOI18N
        lblFoodRequestsTitle.setForeground(new java.awt.Color(255, 93, 119));
        lblFoodRequestsTitle.setText("Food Requests");
        add(lblFoodRequestsTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(448, 32, -1, -1));

        tblFdReqs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Request Id", "Requestor", "Quantity", "Order Type", "Status"
            }
        ));
        tblFdReqs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblFdReqsMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblFdReqs);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 99, 999, 153));

        btnAssign.setFont(new java.awt.Font("Lucida Sans", 0, 14)); // NOI18N
        btnAssign.setText("Assign");
        btnAssign.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });
        add(btnAssign, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 520, 80, 30));

        lblRequestID.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblRequestID.setText("Request ID :");
        add(lblRequestID, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 390, -1, 30));

        txtDonorRequestID.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDonorRequestID.setPreferredSize(new java.awt.Dimension(150, 25));
        txtDonorRequestID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDonorRequestIDFocusLost(evt);
            }
        });
        txtDonorRequestID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDonorRequestIDKeyReleased(evt);
            }
        });
        add(txtDonorRequestID, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 390, 137, -1));

        lblAssignVolunteer.setFont(new java.awt.Font("Lucida Sans", 1, 14)); // NOI18N
        lblAssignVolunteer.setText("Assign Volunteer :");
        add(lblAssignVolunteer, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 450, -1, 30));

        comboAssignVolunteer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(comboAssignVolunteer, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 460, 137, -1));

        btnSend.setFont(new java.awt.Font("Lucida Sans", 0, 14)); // NOI18N
        btnSend.setText("Send request to volunteer");
        btnSend.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });
        add(btnSend, new org.netbeans.lib.awtextra.AbsoluteConstraints(811, 293, 200, 30));

        lblAssignVolunteerTitle.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        lblAssignVolunteerTitle.setForeground(new java.awt.Color(255, 93, 119));
        lblAssignVolunteerTitle.setText("Assign  a Volunteer");
        add(lblAssignVolunteerTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 310, -1, -1));
        add(LabelImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 1470, 670));
    }// </editor-fold>//GEN-END:initComponents

           public void setBG() {
        try {
            LabelImg.setMinimumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImg.setPreferredSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));
            LabelImg.setMaximumSize(new Dimension(userProcessContainer.getWidth(), userProcessContainer.getHeight()));

            Image img = ImageIO.read(getClass().getResource("/Images/blurbg.jpeg"));

            Image newimg = img.getScaledInstance(1500, userProcessContainer.getHeight(), java.awt.Image.SCALE_SMOOTH);
            LabelImg.setIcon(new ImageIcon(newimg));
        } catch (IOException ex) {

        }
    }

    public void makeTableTransparent() {
        tblFdReqs.setOpaque(false);
        ((DefaultTableCellRenderer) tblFdReqs.getDefaultRenderer(Object.class)).setOpaque(false);
        tblFdReqs.setShowGrid(false);
        jScrollPane1.setOpaque(false);
        jScrollPane1.getViewport().setOpaque(false);

        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
        headerRenderer.setBackground(Color.WHITE);

        for (int i = 0; i < tblFdReqs.getModel().getColumnCount(); i++) {
            tblFdReqs.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
        }
    }
    private void txtDonorRequestIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDonorRequestIDFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_txtDonorRequestIDFocusLost

    private void txtDonorRequestIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDonorRequestIDKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDonorRequestIDKeyReleased

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblFdReqs.getSelectedRow();
        if(selectedRowIndex < 0){
             
             //JOptionPane.showMessageDialog is used to create an information-message dialog titled "Message"
            //through send button the request to assign volunteer will be send
            JOptionPane.showMessageDialog(this, "Please select a request");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblFdReqs.getModel();
        Reqorder selectedR = (Reqorder)model.getValueAt(selectedRowIndex, 0);
        txtDonorRequestID.setText(selectedR.getReqOrderId());
        ArrayList<String> VolunteerList = new ArrayList();
        for (Volunteer vol : ecosystem.getVolDir().getVolunteerList()){
            VolunteerList.add(vol.getVolName());
        }
        comboAssignVolunteer.setModel(new DefaultComboBoxModel<String>(VolunteerList.toArray(new String[0])));
    }//GEN-LAST:event_btnSendActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
         String Reqid=txtDonorRequestID.getText();
        for(Reqorder r: ecosystem.getReqorderDirectory().getReqOrderList()){
            volname= comboAssignVolunteer.getSelectedItem().toString();
            r.setReqVol(volname);
            r.setReqOrderStatus("Assigned to Volunteer");
        }
        for(Volunteer v:ecosystem.getVolDir().getVolunteerList()){
            if(v.getVolName().equals(volname)){
                v.setVolAvail("No");
            }
        }
        //the work will be assigned to the volunteer successfully 
        JOptionPane.showMessageDialog(this, "Delivery assigned to volunteer successfully!");
    }//GEN-LAST:event_btnAssignActionPerformed

    private void tblFdReqsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblFdReqsMousePressed
        // TODO add your handling code here:
      tblFdReqs.setSelectionForeground(Color.BLUE);
    }//GEN-LAST:event_tblFdReqsMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelImg;
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnSend;
    private javax.swing.JComboBox<String> comboAssignVolunteer;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAssignVolunteer;
    private javax.swing.JLabel lblAssignVolunteerTitle;
    private javax.swing.JLabel lblFoodRequestsTitle;
    private javax.swing.JLabel lblRequestID;
    private javax.swing.JTable tblFdReqs;
    private javax.swing.JTextField txtDonorRequestID;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblFdReqs.getModel();
        model.setRowCount(0);
        for(Reqorder rq: ecosystem.getReqorderDirectory().getReqOrderList()){
            if(rq.getReqPantryName().equals(FCPname)){
           Object[] row = new Object[5];
           row[0] =rq;
           row[1] =rq.getReqName();
           row[2] =rq.getReqOrderQuant();
           row[3] =rq.getReqOrderType();
           row[4] =rq.getReqOrderStatus();
           model.addRow(row);
            }
        } 
    }
}
